{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","className","alt","src","CardList","Robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hashError","error","errorInfo","this","setState","hasError","Component","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","Robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,MAErB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BJ,EAA1B,cACrB,gCACI,6BAAKD,IACL,4BAAIE,WCiBLI,EAvBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAKf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEIT,GAAIM,EAAOG,GAAGT,GACdD,KAAMO,EAAOG,GAAGV,KAChBE,MAAOK,EAAOG,GAAGR,OAHZQ,SCClBC,EAbG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,qBAAKV,UAAW,MAAhB,SACI,uBACIA,UAAW,iCACXW,KAAM,SACNC,YAAa,eACbC,SAAUH,OCCXI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,aCmBJC,E,kDArBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,WAAW,GAHA,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACC,UAAU,M,oBAI7B,WACI,OAAGF,KAAKJ,MAAMC,UACH,6DAGJG,KAAKX,MAAMK,a,GAlBES,aCkDbC,E,kDA5CX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAEM,YAAaD,EAAME,OAAOC,SAf1C,EAAKb,MAAQ,CACTlB,OAAQ,GACR6B,YAAa,IAJP,E,qDAUd,WAAqB,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAAEvB,OAAQoC,S,oBAO/C,WAAU,IAAD,OACCC,EAAiBf,KAAKJ,MAAMlB,OAAOsC,QAAO,SAAAC,GAC5C,OAAOA,EAAM9C,KAAK+C,cAAcC,SAAS,EAAKvB,MAAMW,YAAYW,kBAGpE,OAAiC,IAA7BlB,KAAKJ,MAAMlB,OAAO0C,OACX,yCAIH,sBAAK9C,UAAW,KAAhB,UACI,oBAAIA,UAAW,KAAf,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAQqC,e,GApC5BZ,aCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACH,cAAC,EAAD,IACJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.e7035b79.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({name, id, email}) =>{\n    // const {name, id, email} = props\n    return(\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({Robots}) =>{\n    // if(true){\n    //     throw new Error('NOOOOOO')\n    // }\n\n    return (\n        <div>\n            {\n                Robots.map((user,i) => {\n                    return (\n                        <Card\n                            key={i}\n                            id={Robots[i].id}\n                            name={Robots[i].name}\n                            email={Robots[i].email}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({searchfield, searchChange}) =>{\n    return (\n        <div className={'pa2'}>\n            <input\n                className={'pa3 ba b --green bg-light-blue'}\n                type={'search'}\n                placeholder={'Search Robot'}\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) =>{\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            hashError: false\n        }\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({hasError: true})\n    }\n\n\n    render() {\n        if(this.state.hashError){\n            return <h1>Oooops. That is not a good </h1>\n        }\n\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary;","import React, { Component } from \"react\";\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nclass App extends Component{\n    constructor() {\n        super()\n        this.state = {\n            Robots: [],\n            searchField: ''\n        }\n\n    }\n\n    //Extracts Data from source\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ Robots: users}));\n    }\n\n    onSearchChange = (event) =>{\n        this.setState({ searchField: event.target.value})\n    }\n\n    render() {\n        const filteredRobots = this.state.Robots.filter(Robot => {\n            return Robot.name.toLowerCase().includes(this.state.searchField.toLowerCase())\n        })\n\n        if (this.state.Robots.length === 0) {\n            return <h1>Loading</h1>\n        } else {\n\n            return (\n                <div className={'tc'}>\n                    <h1 className={'f2'}>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList Robots={filteredRobots}/>\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            );\n        }\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n      <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}